version: "3.8"

services:
  bus_destination_db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_DATABASE=bus_destination
      - MYSQL_USER=users
      - MYSQL_PASSWORD=users
    ports:
      - "3307:3307"
    volumes:
      - mysql_data:/var/lib/mysql

  user_db:
    image: mariadb
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: example

  bus_destination_service:
    build:
      context: ./bus_destination_service
      dockerfile: Dockerfile
    container_name: destination_service_container
    restart: always
    depends_on:
      - api_gateway_service
    ports:
      - "5005:5001"

  user_service_container:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user_service_container
    restart: always
    depends_on:
      - api_gateway_service
    ports:
      - "8003:8003"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    restart: always
    ports:
      - "8000:8080"

  api_gateway_service:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api_gateway_container
    restart: always
    ports:
      - "5191:5191"

  bookings_db:
    image: mysql:8.0

    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: booking

    ports:
      - "3310:3306"

  bookings_service:
    build: 
      context: ./bookings_service
      dockerfile: Dockerfile
    container_name: bookings_service_container
    command: ["python", "run.py"]
    restart: always
    depends_on:
      - api_gateway_service
    environment:
      MYSQL_HOST: bookings_db
      MYSQL_USER: root
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: booking
    ports:
      - "5002:5000"
  
  appointments_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: appointment
    ports:
      - "3309:3306"

  appointments_service:
    build:
      context: ./appointments_service
      dockerfile: Dockerfile
    container_name: appointments_service_container
    command: ["python", "run.py"]
    restart: always
    depends_on:
      - api_gateway_service
    environment:
      MYSQL_HOST: appointments_db
      MYSQL_USER: root
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: appointment
    ports:
      - "5001:5000"


volumes:
  mysql_data:
    driver: local